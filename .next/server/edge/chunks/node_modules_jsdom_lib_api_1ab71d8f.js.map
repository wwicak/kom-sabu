{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/jsdom/lib/api.js"],"sourcesContent":["\"use strict\";\nconst path = require(\"path\");\nconst fs = require(\"fs\").promises;\nconst vm = require(\"vm\");\nconst toughCookie = require(\"tough-cookie\");\nconst sniffHTMLEncoding = require(\"html-encoding-sniffer\");\nconst whatwgURL = require(\"whatwg-url\");\nconst whatwgEncoding = require(\"whatwg-encoding\");\nconst { URL } = require(\"whatwg-url\");\nconst MIMEType = require(\"whatwg-mimetype\");\nconst idlUtils = require(\"./jsdom/living/generated/utils.js\");\nconst VirtualConsole = require(\"./jsdom/virtual-console.js\");\nconst { createWindow } = require(\"./jsdom/browser/Window.js\");\nconst { parseIntoDocument } = require(\"./jsdom/browser/parser\");\nconst { fragmentSerialization } = require(\"./jsdom/living/domparsing/serialization.js\");\nconst ResourceLoader = require(\"./jsdom/browser/resources/resource-loader.js\");\nconst NoOpResourceLoader = require(\"./jsdom/browser/resources/no-op-resource-loader.js\");\n\nclass CookieJar extends toughCookie.CookieJar {\n  constructor(store, options) {\n    // jsdom cookie jars must be loose by default\n    super(store, { looseMode: true, ...options });\n  }\n}\n\nconst window = Symbol(\"window\");\nlet sharedFragmentDocument = null;\n\nclass JSDOM {\n  constructor(input = \"\", options = {}) {\n    const mimeType = new MIMEType(options.contentType === undefined ? \"text/html\" : options.contentType);\n    const { html, encoding } = normalizeHTML(input, mimeType);\n\n    options = transformOptions(options, encoding, mimeType);\n\n    this[window] = createWindow(options.windowOptions);\n\n    const documentImpl = idlUtils.implForWrapper(this[window]._document);\n\n    options.beforeParse(this[window]._globalProxy);\n\n    parseIntoDocument(html, documentImpl);\n\n    documentImpl.close();\n  }\n\n  get window() {\n    // It's important to grab the global proxy, instead of just the result of `createWindow(...)`, since otherwise\n    // things like `window.eval` don't exist.\n    return this[window]._globalProxy;\n  }\n\n  get virtualConsole() {\n    return this[window]._virtualConsole;\n  }\n\n  get cookieJar() {\n    // TODO NEWAPI move _cookieJar to window probably\n    return idlUtils.implForWrapper(this[window]._document)._cookieJar;\n  }\n\n  serialize() {\n    return fragmentSerialization(idlUtils.implForWrapper(this[window]._document), { requireWellFormed: false });\n  }\n\n  nodeLocation(node) {\n    if (!idlUtils.implForWrapper(this[window]._document)._parseOptions.sourceCodeLocationInfo) {\n      throw new Error(\"Location information was not saved for this jsdom. Use includeNodeLocations during creation.\");\n    }\n\n    return idlUtils.implForWrapper(node).sourceCodeLocation;\n  }\n\n  getInternalVMContext() {\n    if (!vm.isContext(this[window])) {\n      throw new TypeError(\"This jsdom was not configured to allow script running. \" +\n        \"Use the runScripts option during creation.\");\n    }\n\n    return this[window];\n  }\n\n  reconfigure(settings) {\n    if (\"windowTop\" in settings) {\n      this[window]._top = settings.windowTop;\n    }\n\n    if (\"url\" in settings) {\n      const document = idlUtils.implForWrapper(this[window]._document);\n\n      const url = whatwgURL.parseURL(settings.url);\n      if (url === null) {\n        throw new TypeError(`Could not parse \"${settings.url}\" as a URL`);\n      }\n\n      document._URL = url;\n      document._origin = whatwgURL.serializeURLOrigin(document._URL);\n      this[window]._sessionHistory.currentEntry.url = url;\n    }\n  }\n\n  static fragment(string = \"\") {\n    if (!sharedFragmentDocument) {\n      sharedFragmentDocument = (new JSDOM()).window.document;\n    }\n\n    const template = sharedFragmentDocument.createElement(\"template\");\n    template.innerHTML = string;\n    return template.content;\n  }\n\n  static fromURL(url, options = {}) {\n    return Promise.resolve().then(() => {\n      // Remove the hash while sending this through the research loader fetch().\n      // It gets added back a few lines down when constructing the JSDOM object.\n      const parsedURL = new URL(url);\n      const originalHash = parsedURL.hash;\n      parsedURL.hash = \"\";\n      url = parsedURL.href;\n\n      options = normalizeFromURLOptions(options);\n\n      const resourceLoader = resourcesToResourceLoader(options.resources);\n      const resourceLoaderForInitialRequest = resourceLoader.constructor === NoOpResourceLoader ?\n        new ResourceLoader() :\n        resourceLoader;\n\n      const req = resourceLoaderForInitialRequest.fetch(url, {\n        accept: \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\",\n        cookieJar: options.cookieJar,\n        referrer: options.referrer\n      });\n\n      return req.then(body => {\n        const res = req.response;\n\n        options = Object.assign(options, {\n          url: req.href + originalHash,\n          contentType: res.headers[\"content-type\"],\n          referrer: req.getHeader(\"referer\") ?? undefined\n        });\n\n        return new JSDOM(body, options);\n      });\n    });\n  }\n\n  static async fromFile(filename, options = {}) {\n    options = normalizeFromFileOptions(filename, options);\n    const buffer = await fs.readFile(filename);\n\n    return new JSDOM(buffer, options);\n  }\n}\n\nfunction normalizeFromURLOptions(options) {\n  // Checks on options that are invalid for `fromURL`\n  if (options.url !== undefined) {\n    throw new TypeError(\"Cannot supply a url option when using fromURL\");\n  }\n  if (options.contentType !== undefined) {\n    throw new TypeError(\"Cannot supply a contentType option when using fromURL\");\n  }\n\n  // Normalization of options which must be done before the rest of the fromURL code can use them, because they are\n  // given to request()\n  const normalized = { ...options };\n\n  if (options.referrer !== undefined) {\n    normalized.referrer = (new URL(options.referrer)).href;\n  }\n\n  if (options.cookieJar === undefined) {\n    normalized.cookieJar = new CookieJar();\n  }\n\n  return normalized;\n\n  // All other options don't need to be processed yet, and can be taken care of in the normal course of things when\n  // `fromURL` calls `new JSDOM(html, options)`.\n}\n\nfunction normalizeFromFileOptions(filename, options) {\n  const normalized = { ...options };\n\n  if (normalized.contentType === undefined) {\n    const extname = path.extname(filename);\n    if (extname === \".xhtml\" || extname === \".xht\" || extname === \".xml\") {\n      normalized.contentType = \"application/xhtml+xml\";\n    }\n  }\n\n  if (normalized.url === undefined) {\n    normalized.url = new URL(\"file:\" + path.resolve(filename));\n  }\n\n  return normalized;\n}\n\nfunction transformOptions(options, encoding, mimeType) {\n  const transformed = {\n    windowOptions: {\n      // Defaults\n      url: \"about:blank\",\n      referrer: \"\",\n      contentType: \"text/html\",\n      parsingMode: \"html\",\n      parseOptions: {\n        sourceCodeLocationInfo: false,\n        scriptingEnabled: false\n      },\n      runScripts: undefined,\n      encoding,\n      pretendToBeVisual: false,\n      storageQuota: 5000000,\n\n      // Defaults filled in later\n      resourceLoader: undefined,\n      virtualConsole: undefined,\n      cookieJar: undefined\n    },\n\n    // Defaults\n    beforeParse() { }\n  };\n\n  // options.contentType was parsed into mimeType by the caller.\n  if (!mimeType.isHTML() && !mimeType.isXML()) {\n    throw new RangeError(`The given content type of \"${options.contentType}\" was not a HTML or XML content type`);\n  }\n\n  transformed.windowOptions.contentType = mimeType.essence;\n  transformed.windowOptions.parsingMode = mimeType.isHTML() ? \"html\" : \"xml\";\n\n  if (options.url !== undefined) {\n    transformed.windowOptions.url = (new URL(options.url)).href;\n  }\n\n  if (options.referrer !== undefined) {\n    transformed.windowOptions.referrer = (new URL(options.referrer)).href;\n  }\n\n  if (options.includeNodeLocations) {\n    if (transformed.windowOptions.parsingMode === \"xml\") {\n      throw new TypeError(\"Cannot set includeNodeLocations to true with an XML content type\");\n    }\n\n    transformed.windowOptions.parseOptions = { sourceCodeLocationInfo: true };\n  }\n\n  transformed.windowOptions.cookieJar = options.cookieJar === undefined ?\n                                       new CookieJar() :\n                                       options.cookieJar;\n\n  transformed.windowOptions.virtualConsole = options.virtualConsole === undefined ?\n                                            (new VirtualConsole()).sendTo(console) :\n                                            options.virtualConsole;\n\n  if (!(transformed.windowOptions.virtualConsole instanceof VirtualConsole)) {\n    throw new TypeError(\"virtualConsole must be an instance of VirtualConsole\");\n  }\n\n  transformed.windowOptions.resourceLoader = resourcesToResourceLoader(options.resources);\n\n  if (options.runScripts !== undefined) {\n    transformed.windowOptions.runScripts = String(options.runScripts);\n    if (transformed.windowOptions.runScripts === \"dangerously\") {\n      transformed.windowOptions.parseOptions.scriptingEnabled = true;\n    } else if (transformed.windowOptions.runScripts !== \"outside-only\") {\n      throw new RangeError(`runScripts must be undefined, \"dangerously\", or \"outside-only\"`);\n    }\n  }\n\n  if (options.beforeParse !== undefined) {\n    transformed.beforeParse = options.beforeParse;\n  }\n\n  if (options.pretendToBeVisual !== undefined) {\n    transformed.windowOptions.pretendToBeVisual = Boolean(options.pretendToBeVisual);\n  }\n\n  if (options.storageQuota !== undefined) {\n    transformed.windowOptions.storageQuota = Number(options.storageQuota);\n  }\n\n  return transformed;\n}\n\nfunction normalizeHTML(html, mimeType) {\n  let encoding = \"UTF-8\";\n\n  if (ArrayBuffer.isView(html)) {\n    html = Buffer.from(html.buffer, html.byteOffset, html.byteLength);\n  } else if (html instanceof ArrayBuffer) {\n    html = Buffer.from(html);\n  }\n\n  if (Buffer.isBuffer(html)) {\n    encoding = sniffHTMLEncoding(html, {\n      defaultEncoding: mimeType.isXML() ? \"UTF-8\" : \"windows-1252\",\n      transportLayerEncodingLabel: mimeType.parameters.get(\"charset\")\n    });\n    html = whatwgEncoding.decode(html, encoding);\n  } else {\n    html = String(html);\n  }\n\n  return { html, encoding };\n}\n\nfunction resourcesToResourceLoader(resources) {\n  switch (resources) {\n    case undefined: {\n      return new NoOpResourceLoader();\n    }\n    case \"usable\": {\n      return new ResourceLoader();\n    }\n    default: {\n      if (!(resources instanceof ResourceLoader)) {\n        throw new TypeError(\"resources must be an instance of ResourceLoader\");\n      }\n      return resources;\n    }\n  }\n}\n\nexports.JSDOM = JSDOM;\n\nexports.VirtualConsole = VirtualConsole;\nexports.CookieJar = CookieJar;\nexports.ResourceLoader = ResourceLoader;\n\nexports.toughCookie = toughCookie;\n"],"names":[],"mappings":"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","ignoreList":[0]}}]
}